## This is a sample configuration file. See the nxlog reference manual about the
## configuration options. It should be installed locally and is also available
## online at http://nxlog.org/docs/

## Please set the ROOT to the folder your nxlog was installed into,
## otherwise it will not start.

#define ROOT C:\Program Files\nxlog
define ROOT C:\\Program Files (x86)\\nxlog


define RAIZ C:\SiTef
define EXPLOGS %RAIZ%\ETC
define APPNAME MonitSiTef
define probSit %ROOT%\\data\\nxlog.log

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log

<Extension json>
      Module xm_json
</Extension>

<Extension gelf>
      Module xm_gelf
</Extension>

<Extension multiline_versao>
    Module  xm_multiline
    HeaderLine /(\[[\w*|\/*| |.*]*)/
    EndLine    /(DataUltimaAtivacao=\d\d\/\d\d\/\d\d\d\d)/
</Extension>

<Extension fileop>
    Module      xm_fileop
    <Schedule>
        Every   1 day
        <Exec>
            if(integer(strftime(now(),"%Y%m%d%H%M%S")) - integer(strftime(file_mtime("%EXPLOGS%\\Console.Sit"),"%Y%m%d%H%M%S")) >= 1000000){
                file_write("%probSit%", string(strftime(now(), "%d/%m/%Y-%H:%M:%S: ") + "SiTef esta sem movimentacao desde: " + file_mtime("%EXPLOGS%\\Console.Sit")+"\n"));
            }
        </Exec>
    </Schedule>
    #<Schedule>
    #       Every   1 day
    #       <Exec>
    #               file_copy("\\\TI02951\\conf\\nxlog.conf", "%ROOT%\\conf\\nxlog.conf");
                
    #       </Exec>
    # </Schedule>
    <Schedule>
            Every   1 day
            #When 1 0 * * *
            <Exec>
                 exec_async("%ROOT%\\conf\\openDRVCOM.exe","%ROOT%\\data\\ListaIFs.txt");
            </Exec>
    </Schedule>
    <Schedule>
            When 59 23 * * *
            <Exec>
                 file_remove("%ROOT%\\data\\ListaIFs.txt");
            </Exec>
    </Schedule>
</Extension>

<Extension exec>
    Module  xm_exec
</Extension>

<Input format_DRVCOM>
    Module im_file
    File '%RAIZ%\Monit\Comunicacao.*'
    #File '\\192.168.49.95\sitef\Monit\comunicacao.*'
    Recursive TRUE
    InputType Dgram
    SavePos FALSE
    ReadFromLast FALSE

    <Exec>
        $datahoje = string(strftime(now(), "%Y%m%d"));
        #if(string(file_name()) =~ /$datahoje/){
        if(substr(file_name(), 15, 23) == $datahoje){
            file_write("%ROOT%\\data\\ListaIFs.txt",file_name()+"\n");
        }
    </Exec>
</Input>

<Extension csvDRVCOM>
    Module      xm_csv
    Fields      $data,  $hora,  $TIPO_REG, $RESERVADO, $COD_REDE, $ID_AUTORIZADOR, $COD_CANAL, $ESTADO_CONEXAO, $HR_ULTIMA_CONEXAO, $HR_ULTIMA_QUEDA, $QTD_QUEDAS, $QTD_TX, $HR_ULTIMO_TX, $QTD_RX, $HR_ULTIMO_RX
    FieldTypes  string, string, string,    string,     string,   string,          string,     string,          datetime,             datetime,           integer,     integer, datetime,        integer, datetime
    Delimiter   ;
</Extension>

<Input drvcom_monit>
    Module im_file
    #File '%EXPLOGS%\\Comunicacao.*'
    File '%ROOT%\\data\\ComunicacaoFMT.CSV'
    #InputType Dgram
    SavePos TRUE
    ReadFromLast TRUE

    <Exec>
        if $raw_event =~ /\d*;\d*;010/ {
            csvDRVCOM->parse_csv();
            $datetime = $data + $hora;
            $datetime = strptime($datetime, "%Y%m%d%H%M%S");
            if (string($HR_ULTIMA_CONEXAO) == "1969-12-31 22:00:00") delete($HR_ULTIMA_CONEXAO);
            else $HR_ULTIMA_CONEXAO = strftime($HR_ULTIMA_CONEXAO, "%d/%m/%Y-%H:%M:%S");
            if (string($HR_ULTIMA_QUEDA) == "1969-12-31 22:00:00") delete($HR_ULTIMA_QUEDA);
            else $HR_ULTIMA_QUEDA = strftime($HR_ULTIMA_QUEDA, "%H:%M:%S");
            if (string($HR_ULTIMO_TX) == "1969-12-31 22:00:00") delete($HR_ULTIMO_TX);
            else $HR_ULTIMO_TX = strftime($HR_ULTIMO_TX, "%H:%M:%S");
            if (string($HR_ULTIMO_RX) == "1969-12-31 22:00:00") delete($HR_ULTIMO_RX);
            else $HR_ULTIMO_RX = strftime($HR_ULTIMO_RX, "%H:%M:%S");
            if ($ESTADO_CONEXAO == "0") $ESTADO_CONEXAO = "Conectado";
            else $ESTADO_CONEXAO = "Desconectado";
            delete($data);
            delete($hora);
        }else{
            drop();
        }
    </Exec>
</Input>

<Input console_monit>
    Module im_file
    File "%EXPLOGS%\\Console.Sit"
    SavePos TRUE
    ReadFromLast TRUE

    <Exec>
        if $raw_event =~ /^\s*$/ drop();
        if $raw_event =~ /^(\d*)\/(\d*)\/(\d*)-(\d*):(\d*):(\d*)/{
            $datetime = $3+$2+$1+$4+$5+$6;
            $datetime = strptime($datetime, "%Y%m%d%H%M%S");
            $mensagem = substr($raw_event,21);
            if $raw_event =~ /(erro|Erro|error|ERRO|foi finalizado)/{
                $nivel_alerta = 2;
            }
            else if $raw_event =~ /(alerta|Alerta|ALERTA|Msg maior que esperada|livre no disco de dados \(C\:\) de 4155 MB|Excedeu o|Favor entrar em contato|ATENCAO|Atencao|atencao)/{
                $nivel_alerta = 1;
            }
            else{
                $nivel_alerta = 0;
            }
            if $mensagem =~ /(\w.\w*)/{
                $emissor = $1;
            }
                
        }
    </Exec>
</Input>

<Input console_emerg_monit>
    Module im_file
    File "%probSit%"
    SavePos TRUE
    ReadFromLast TRUE

    <Exec>
        if $raw_event =~ /^\s*$/ drop();
        if $raw_event =~ /^(\d*)\/(\d*)\/(\d*)-(\d*):(\d*):(\d*): SiTef esta sem/{
            $datetime = $3+$2+$1+$4+$5+$6;
            $datetime = strptime($datetime, "%Y%m%d%H%M%S");
            $mensagem = substr($raw_event,21);
            $nivel_alerta = 2;      
        }
        else{
              drop();
        }
    </Exec>
</Input>

<Input versao_monit>
    Module im_file
    File "%EXPLOGS%\\versao.ini"
    SavePos TRUE
    ReadFromLast TRUE
    InputType multiline_versao

    <Exec>
        if $raw_event =~ /(\[[\w*|\/*| |.*]*)/{
            $datetime = now();
            $modulo = $1;
            $modulo = substr($modulo,1);
            if $raw_event =~ /(Versao=[\w*|\/*| |.*]*)/{
                  $versao = $1;
                  $versao = substr($versao,7);
            }
            if $raw_event =~ /(DataUltimaAtivacao=\d\d\/\d\d\/\d\d\d\d)/{
                  $dataUltimaAtivacao = $1;
                  $dataUltimaAtivacao = substr($dataUltimaAtivacao,19);
            }
        }
        else{
            drop();
        }
    </Exec>
</Input>

<Processor transformer>
    Module pm_transformer

    <Exec>
        # Uncomment to override the program name
        $SourceName = '%APPNAME%';
      
        $Hostname = hostname();
        $Host_ip = host_ip();
              
        #$EventReceivedTime = $datetime;

        $timestamp = strftime($datetime, "%Y-%m-%dT%H:%M:%S");
        rename_field("timestamp","@timestamp");

        rename_field("EventReceivedTime", "EventTime");
      
        #delete($SourceModuleName);
        delete($SourceModuleType);
        delete($registro);
        delete($datetime);
              
    </Exec>
</Processor>

<Output out>
    Module om_file
    Exec $raw_event = to_json();
    File "\\\TI02951\\monit\\saida.json"
</Output>

<Output outgelf>
    Module om_tcp
    Host 192.168.54.215
    Port 12201
    OutputType GELF_TCP
</Output>

<Output outN>
        Module  om_null
</Output>

<Route 1>
    Priority    1
    Path  format_DRVCOM => outN
</Route>

<Route 2>
    Priority    2
    Path  drvcom_monit,console_monit,console_emerg_monit,versao_monit => transformer => outgelf
</Route>